// <auto-generated />
using System;
using ApiClick;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiClick.Migrations
{
    [DbContext(typeof(ClickContext))]
    partial class ClickContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApiClick.Models.AdBanner", b =>
                {
                    b.Property<int>("AdBannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int?>("ImgId")
                        .HasColumnType("int");

                    b.Property<int>("InitialCount")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("AdBannerId");

                    b.HasIndex("ImgId");

                    b.ToTable("AdBanners","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.ArrayModels.HashtagsListElement", b =>
                {
                    b.Property<int>("HashtagsListElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("HashtagId")
                        .HasColumnType("int");

                    b.HasKey("HashtagsListElementId");

                    b.HasIndex("BrandId");

                    b.HasIndex("HashtagId");

                    b.ToTable("HashtagsListElements","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.ArrayModels.PaymentMethodsListElement", b =>
                {
                    b.Property<int>("PaymentMethodListElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.HasKey("PaymentMethodListElementId");

                    b.HasIndex("BrandId");

                    b.ToTable("PaymentMethodsListElement","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Available")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(true);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("CloseTime")
                        .HasColumnType("time");

                    b.Property<string>("Contact")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DeliveryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("DescriptionMax")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("ImgBannerId")
                        .HasColumnType("int");

                    b.Property<int?>("ImgLogoId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("OpenTime")
                        .HasColumnType("time");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Rules")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BrandId")
                        .HasName("PK_Brand_BrandId");

                    b.HasIndex("ImgBannerId");

                    b.HasIndex("ImgLogoId");

                    b.HasIndex("UserId");

                    b.ToTable("Brands","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.BrandMenu", b =>
                {
                    b.Property<int>("BrandMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("BrandMenuName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ImgId")
                        .HasColumnType("int");

                    b.HasKey("BrandMenuId")
                        .HasName("PK_BrandMenus_BrandMenuId");

                    b.HasIndex("BrandId");

                    b.HasIndex("ImgId");

                    b.ToTable("BrandMenus","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.EnumModels.OrderStatus", b =>
                {
                    b.Property<int>("OrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MasterRole")
                        .HasColumnType("int");

                    b.Property<string>("OrderStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("OrderStatusId");

                    b.ToTable("OrderStatuses","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("UserId");

                    b.ToTable("Images","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MessageId")
                        .HasName("PK_Messages_MessageId");

                    b.HasIndex("BrandId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Banknote")
                        .HasColumnType("int");

                    b.Property<int?>("BrandOwnerId")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Commentary")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("Delivery")
                        .HasColumnType("bit");

                    b.Property<int?>("Etash")
                        .HasColumnType("int");

                    b.Property<string>("House")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("Kv")
                        .HasColumnType("int");

                    b.Property<int?>("Padik")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("PointRegisterId")
                        .HasColumnType("int");

                    b.Property<bool>("PointsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("DF_Orders_OrdersId");

                    b.HasIndex("BrandOwnerId");

                    b.HasIndex("PointRegisterId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandMenuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("ImgId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PriceDiscount")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ProductId")
                        .HasName("PK_Products_ProductId");

                    b.HasIndex("BrandMenuId");

                    b.HasIndex("ImgId");

                    b.ToTable("Products","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.RegisterModels.PointRegister", b =>
                {
                    b.Property<int>("PointRegisterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Points")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<bool>("TransactionCompleted")
                        .HasColumnType("bit");

                    b.HasKey("PointRegisterId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("PointRegisters","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderCount")
                        .HasColumnType("int");

                    b.Property<int?>("ProductOfDayId")
                        .HasColumnType("int");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReportId");

                    b.HasIndex("BrandId");

                    b.HasIndex("ProductOfDayId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ApiClick.Models.RequestDetail", b =>
                {
                    b.Property<int>("RequestDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<decimal>("SuggestedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WaterRequestId")
                        .HasColumnType("int");

                    b.HasKey("RequestDetailId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RequestId");

                    b.HasIndex("WaterRequestId");

                    b.ToTable("RequestDetails","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("Etash")
                        .HasColumnType("int");

                    b.Property<string>("House")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("Kv")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NotificationRegistration")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("NotificationsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("Padik")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<decimal>("Points")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("UserId")
                        .HasName("DF_Users_UserId");

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasName("DF_Users_Phone_Unique");

                    b.ToTable("Users","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.WaterRequest", b =>
                {
                    b.Property<int>("WaterRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("WaterRequestId");

                    b.HasIndex("BrandId");

                    b.HasIndex("OrderId");

                    b.ToTable("WaterRequests","dbo");
                });

            modelBuilder.Entity("Click.Models.Hashtag", b =>
                {
                    b.Property<int>("HashTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("HashTagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("HashTagId");

                    b.ToTable("Hashtags","dbo");
                });

            modelBuilder.Entity("ApiClick.Models.AdBanner", b =>
                {
                    b.HasOne("ApiClick.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImgId")
                        .HasConstraintName("FK_AdBannerCl_ImgId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ApiClick.Models.ArrayModels.HashtagsListElement", b =>
                {
                    b.HasOne("ApiClick.Models.Brand", "Brand")
                        .WithMany("HashtagsListElements")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Click.Models.Hashtag", "Hashtag")
                        .WithMany()
                        .HasForeignKey("HashtagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiClick.Models.ArrayModels.PaymentMethodsListElement", b =>
                {
                    b.HasOne("ApiClick.Models.Brand", "Brand")
                        .WithMany("PaymentMethodsListElements")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ApiClick.Models.Brand", b =>
                {
                    b.HasOne("ApiClick.Models.Image", "ImgBanner")
                        .WithMany()
                        .HasForeignKey("ImgBannerId")
                        .HasConstraintName("FK_Brand_ImgBannerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ApiClick.Models.Image", "ImgLogo")
                        .WithMany()
                        .HasForeignKey("ImgLogoId")
                        .HasConstraintName("FK_Brand_ImgLogoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ApiClick.Models.User", "User")
                        .WithMany("Brands")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Brand_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiClick.Models.BrandMenu", b =>
                {
                    b.HasOne("ApiClick.Models.Brand", "Brand")
                        .WithMany("BrandMenus")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK_BrandMenus_BrandId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ApiClick.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImgId")
                        .HasConstraintName("FK_BrandMenus_ImgId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ApiClick.Models.Image", b =>
                {
                    b.HasOne("ApiClick.Models.User", "User")
                        .WithMany("UploadedImages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiClick.Models.Message", b =>
                {
                    b.HasOne("ApiClick.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK_Messages_BrandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ApiClick.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Messages_OrderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ApiClick.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Messages_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiClick.Models.Order", b =>
                {
                    b.HasOne("ApiClick.Models.User", "BrandOwner")
                        .WithMany()
                        .HasForeignKey("BrandOwnerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ApiClick.Models.RegisterModels.PointRegister", "PointRegister")
                        .WithMany()
                        .HasForeignKey("PointRegisterId")
                        .HasConstraintName("FK_OrderCl_PointRegisterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ApiClick.Models.EnumModels.OrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_OrderCl_StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ApiClick.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_OrderCl_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiClick.Models.OrderDetail", b =>
                {
                    b.HasOne("ApiClick.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderDetails_OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiClick.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_OrderDetails_ProductId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ApiClick.Models.Product", b =>
                {
                    b.HasOne("ApiClick.Models.BrandMenu", "BrandMenu")
                        .WithMany("Products")
                        .HasForeignKey("BrandMenuId")
                        .HasConstraintName("FK_Products_BrandMenuId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ApiClick.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImgId")
                        .HasConstraintName("FK_Products_ImgId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ApiClick.Models.RegisterModels.PointRegister", b =>
                {
                    b.HasOne("ApiClick.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ApiClick.Models.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ApiClick.Models.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ApiClick.Models.Report", b =>
                {
                    b.HasOne("ApiClick.Models.Product", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ApiClick.Models.Product", "ProductOfDay")
                        .WithMany()
                        .HasForeignKey("ProductOfDayId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ApiClick.Models.RequestDetail", b =>
                {
                    b.HasOne("ApiClick.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ApiClick.Models.WaterRequest", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ApiClick.Models.WaterRequest", null)
                        .WithMany("Suggestions")
                        .HasForeignKey("WaterRequestId");
                });

            modelBuilder.Entity("ApiClick.Models.WaterRequest", b =>
                {
                    b.HasOne("ApiClick.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ApiClick.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
